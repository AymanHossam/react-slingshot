version: 2.1
jobs:
  # Exercise - Rollback
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
  #Exercise: Config and Deployment
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints: ["b6:1a:17:06:37:3f:19:26:b0:d8:2e:2e:62:f3:ec:a8"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i ./ansible/inventory ./ansible/main-remote.yml
  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.dcom/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      # - configure_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure
      - destroy_environment:
          requires:
            - smoke_test
          when: on_fail
